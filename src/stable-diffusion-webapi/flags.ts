/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface Flags
 */
export interface Flags {
    /**
     * path to config which constructs model
     * @type {string}
     * @memberof Flags
     */
    'config'?: string;
    /**
     * path to checkpoint of stable diffusion model; if specified, this checkpoint will be added to the list of checkpoints and loaded
     * @type {string}
     * @memberof Flags
     */
    'ckpt'?: string;
    /**
     * Path to directory with stable diffusion checkpoints
     * @type {string}
     * @memberof Flags
     */
    'ckpt_dir'?: string;
    /**
     * GFPGAN directory
     * @type {string}
     * @memberof Flags
     */
    'gfpgan_dir'?: string;
    /**
     * GFPGAN model file name
     * @type {string}
     * @memberof Flags
     */
    'gfpgan_model'?: string;
    /**
     * do not switch the model to 16-bit floats
     * @type {boolean}
     * @memberof Flags
     */
    'no_half'?: boolean;
    /**
     * do not switch the VAE model to 16-bit floats
     * @type {boolean}
     * @memberof Flags
     */
    'no_half_vae'?: boolean;
    /**
     * do not hide progressbar in gradio UI (we hide it because it slows down ML if you have hardware acceleration in browser)
     * @type {boolean}
     * @memberof Flags
     */
    'no_progressbar_hiding'?: boolean;
    /**
     * maximum batch count value for the UI
     * @type {number}
     * @memberof Flags
     */
    'max_batch_count'?: number;
    /**
     * embeddings directory for textual inversion (default: embeddings)
     * @type {string}
     * @memberof Flags
     */
    'embeddings_dir'?: string;
    /**
     * hypernetwork directory
     * @type {string}
     * @memberof Flags
     */
    'hypernetwork_dir'?: string;
    /**
     * localizations directory
     * @type {string}
     * @memberof Flags
     */
    'localizations_dir'?: string;
    /**
     * allow custom script execution from webui
     * @type {boolean}
     * @memberof Flags
     */
    'allow_code'?: boolean;
    /**
     * enable stable diffusion model optimizations for sacrificing a little speed for low VRM usage
     * @type {boolean}
     * @memberof Flags
     */
    'medvram'?: boolean;
    /**
     * enable stable diffusion model optimizations for sacrificing a lot of speed for very low VRM usage
     * @type {boolean}
     * @memberof Flags
     */
    'lowvram'?: boolean;
    /**
     * load stable diffusion checkpoint weights to VRAM instead of RAM
     * @type {boolean}
     * @memberof Flags
     */
    'lowram'?: boolean;
    /**
     * disables cond/uncond batching that is enabled to save memory with --medvram or --lowvram
     * @type {boolean}
     * @memberof Flags
     */
    'always_batch_cond_uncond'?: boolean;
    /**
     * does not do anything.
     * @type {boolean}
     * @memberof Flags
     */
    'unload_gfpgan'?: boolean;
    /**
     * evaluate at this precision
     * @type {string}
     * @memberof Flags
     */
    'precision'?: string;
    /**
     * use share=True for gradio and make the UI accessible through their site
     * @type {boolean}
     * @memberof Flags
     */
    'share'?: boolean;
    /**
     * ngrok authtoken, alternative to gradio --share
     * @type {string}
     * @memberof Flags
     */
    'ngrok'?: string;
    /**
     * The region in which ngrok should start.
     * @type {string}
     * @memberof Flags
     */
    'ngrok_region'?: string;
    /**
     * enable extensions tab regardless of other options
     * @type {boolean}
     * @memberof Flags
     */
    'enable_insecure_extension_access'?: boolean;
    /**
     * Path to directory with codeformer model file(s).
     * @type {string}
     * @memberof Flags
     */
    'codeformer_models_path'?: string;
    /**
     * Path to directory with GFPGAN model file(s).
     * @type {string}
     * @memberof Flags
     */
    'gfpgan_models_path'?: string;
    /**
     * Path to directory with ESRGAN model file(s).
     * @type {string}
     * @memberof Flags
     */
    'esrgan_models_path'?: string;
    /**
     * Path to directory with BSRGAN model file(s).
     * @type {string}
     * @memberof Flags
     */
    'bsrgan_models_path'?: string;
    /**
     * Path to directory with RealESRGAN model file(s).
     * @type {string}
     * @memberof Flags
     */
    'realesrgan_models_path'?: string;
    /**
     * Path to directory with CLIP model file(s).
     * @type {string}
     * @memberof Flags
     */
    'clip_models_path'?: string;
    /**
     * enable xformers for cross attention layers
     * @type {boolean}
     * @memberof Flags
     */
    'xformers'?: boolean;
    /**
     * enable xformers for cross attention layers regardless of whether the checking code thinks you can run it; do not make bug reports if this fails to work
     * @type {boolean}
     * @memberof Flags
     */
    'force_enable_xformers'?: boolean;
    /**
     * does not do anything
     * @type {boolean}
     * @memberof Flags
     */
    'deepdanbooru'?: boolean;
    /**
     * force-enables Doggettx\'s cross-attention layer optimization. By default, it\'s on for torch cuda.
     * @type {boolean}
     * @memberof Flags
     */
    'opt_split_attention'?: boolean;
    /**
     * force-enables InvokeAI\'s cross-attention layer optimization. By default, it\'s on when cuda is unavailable.
     * @type {boolean}
     * @memberof Flags
     */
    'opt_split_attention_invokeai'?: boolean;
    /**
     * enable older version of split attention optimization that does not consume all the VRAM it can find
     * @type {boolean}
     * @memberof Flags
     */
    'opt_split_attention_v1'?: boolean;
    /**
     * force-disables cross-attention layer optimization
     * @type {boolean}
     * @memberof Flags
     */
    'disable_opt_split_attention'?: boolean;
    /**
     * use CPU as torch device for specified modules
     * @type {Array<any>}
     * @memberof Flags
     */
    'use_cpu'?: Array<any>;
    /**
     * launch gradio with 0.0.0.0 as server name, allowing to respond to network requests
     * @type {boolean}
     * @memberof Flags
     */
    'listen'?: boolean;
    /**
     * launch gradio with given server port, you need root/admin rights for ports < 1024, defaults to 7860 if available
     * @type {string}
     * @memberof Flags
     */
    'port'?: string;
    /**
     * does not do anything
     * @type {boolean}
     * @memberof Flags
     */
    'show_negative_prompt'?: boolean;
    /**
     * filename to use for ui configuration
     * @type {string}
     * @memberof Flags
     */
    'ui_config_file'?: string;
    /**
     * hide directory configuration from webui
     * @type {boolean}
     * @memberof Flags
     */
    'hide_ui_dir_config'?: boolean;
    /**
     * disable editing settings
     * @type {boolean}
     * @memberof Flags
     */
    'freeze_settings'?: boolean;
    /**
     * filename to use for ui settings
     * @type {string}
     * @memberof Flags
     */
    'ui_settings_file'?: string;
    /**
     * launch gradio with --debug option
     * @type {boolean}
     * @memberof Flags
     */
    'gradio_debug'?: boolean;
    /**
     * set gradio authentication like \"username:password\"; or comma-delimit multiple like \"u1:p1,u2:p2,u3:p3\"
     * @type {string}
     * @memberof Flags
     */
    'gradio_auth'?: string;
    /**
     * gradio image uploader tool: can be either editor for ctopping, or color-sketch for drawing
     * @type {string}
     * @memberof Flags
     */
    'gradio_img2img_tool'?: string;
    /**
     * gradio inpainting editor: can be either sketch to only blur/noise the input, or color-sketch to paint over it
     * @type {string}
     * @memberof Flags
     */
    'gradio_inpaint_tool'?: string;
    /**
     * change memory type for stable diffusion to channels last
     * @type {boolean}
     * @memberof Flags
     */
    'opt_channelslast'?: boolean;
    /**
     * filename to use for styles
     * @type {string}
     * @memberof Flags
     */
    'styles_file'?: string;
    /**
     * open the webui URL in the system\'s default browser upon launch
     * @type {boolean}
     * @memberof Flags
     */
    'autolaunch'?: boolean;
    /**
     * launches the UI with light or dark theme
     * @type {string}
     * @memberof Flags
     */
    'theme'?: string;
    /**
     * use textbox for seeds in UI (no up/down, but possible to input long seeds)
     * @type {boolean}
     * @memberof Flags
     */
    'use_textbox_seed'?: boolean;
    /**
     * do not output progressbars to console
     * @type {boolean}
     * @memberof Flags
     */
    'disable_console_progressbars'?: boolean;
    /**
     * print prompts to console when generating with txt2img and img2img
     * @type {boolean}
     * @memberof Flags
     */
    'enable_console_prompts'?: boolean;
    /**
     * Path to Variational Autoencoders model
     * @type {string}
     * @memberof Flags
     */
    'vae_path'?: string;
    /**
     * disable checking pytorch models for malicious code
     * @type {boolean}
     * @memberof Flags
     */
    'disable_safe_unpickle'?: boolean;
    /**
     * use api=True to launch the API together with the webui (use --nowebui instead for only the API)
     * @type {boolean}
     * @memberof Flags
     */
    'api'?: boolean;
    /**
     * Set authentication for API like \"username:password\"; or comma-delimit multiple like \"u1:p1,u2:p2,u3:p3\"
     * @type {string}
     * @memberof Flags
     */
    'api_auth'?: string;
    /**
     * use api=True to launch the API instead of the webui
     * @type {boolean}
     * @memberof Flags
     */
    'nowebui'?: boolean;
    /**
     * Don\'t load model to quickly launch UI
     * @type {boolean}
     * @memberof Flags
     */
    'ui_debug_mode'?: boolean;
    /**
     * Select the default CUDA device to use (export CUDA_VISIBLE_DEVICES=0,1,etc might be needed before)
     * @type {string}
     * @memberof Flags
     */
    'device_id'?: string;
    /**
     * Administrator rights
     * @type {boolean}
     * @memberof Flags
     */
    'administrator'?: boolean;
    /**
     * Allowed CORS origin(s) in the form of a comma-separated list (no spaces)
     * @type {string}
     * @memberof Flags
     */
    'cors_allow_origins'?: string;
    /**
     * Allowed CORS origin(s) in the form of a single regular expression
     * @type {string}
     * @memberof Flags
     */
    'cors_allow_origins_regex'?: string;
    /**
     * Partially enables TLS, requires --tls-certfile to fully function
     * @type {string}
     * @memberof Flags
     */
    'tls_keyfile'?: string;
    /**
     * Partially enables TLS, requires --tls-keyfile to fully function
     * @type {string}
     * @memberof Flags
     */
    'tls_certfile'?: string;
    /**
     * Sets hostname of server
     * @type {string}
     * @memberof Flags
     */
    'server_name'?: string;
    /**
     * Path to directory with LDSR model file(s).
     * @type {string}
     * @memberof Flags
     */
    'ldsr_models_path'?: string;
    /**
     * Path to directory with ScuNET model file(s).
     * @type {string}
     * @memberof Flags
     */
    'scunet_models_path'?: string;
    /**
     * Path to directory with SwinIR model file(s).
     * @type {string}
     * @memberof Flags
     */
    'swinir_models_path'?: string;
}

